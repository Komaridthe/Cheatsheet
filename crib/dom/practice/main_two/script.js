
// Напишите код для вставки <li>2</li><li>3</li> между этими двумя <li> (пеервый HTML)



// После нажатия на кнопку за место неё должны появиться две с текстом




// Напишите код, который выделит красным цветом все ячейки в таблице (class ="score") по диагонали.



// Как найти?…
// · Таблицу с id="table".

// · Все элементы label внутри этой таблицы (их три).

// · Первый элемент в таблице со словом «age».

// · Последний input в этой форме.


/*
 Есть дерево, структурированное как вложенные списки ul class="ulList"/li class="ulList__item".
 Написать код, который выведет каждый элемент списка <li>:
 · Какой в нём текст (без поддерева) ?
 · Какое число потомков – всех вложенных <li> (включая глубоко вложенные) ?
*/




// Объектом какого класса является document?

// Какое место он занимает в DOM-иерархии?

// Наследует ли он от Node или от Element, или может от HTMLElement?



// Напишите код для выбора элемента с атрибутом data-widget-name из документа и прочитайте его значение.



/*
 Сделайте все внешние ссылки списка с классом "links-list" оранжевыми, изменяя их свойство style.
 Ссылка является внешней, если:
 · Её href содержит ://
 · Но не начинается с http://internal.com.
*/


// Создайте функцию clear(elem), которая удаляет всё содержимое из elem.
function clear(elem) {
   /* ваш код */
}
clear(elem);



/*
 Напишите интерфейс для создания списка.
 Для каждого пункта:
 · Запрашивайте содержимое пункта у пользователя с помощью prompt.
 · Создавайте элемент <li> и добавляйте его к <ul>.
 · Процесс прерывается, когда пользователь нажимает Esc или вводит пустую строку.
 Все элементы должны создаваться динамически.
Если пользователь вводит HTML-теги -– пусть в списке они показываются как обычный текст.
*/
let ul = document.createElement('ul');
document.body.append(ul);

/* ваш код */


// Напишите функцию createTree, которая создаёт вложенный список ul/li из объекта.
let data = {
   "Кустарники": {
      "Черника": {},
      "Малина": {}
   },

   "Деревья": {
      "Хвойные": {
         "Секвойя": {},
         "Ель": {}
      },
      "Цветковые": {
         "Яблоня": {},
         "Магнолия": {}
      }
   }
};
let container = document.querySelector('.container');
function createTree(place, obj) {

}
createTree(container, data);



/*
 Напишите код, который добавит каждому элементу списка <li> количество вложенных в него элементов. 
Узлы нижнего уровня, без детей – пропускать.
*/


/*
***
 Напишите функцию createCalendar(elem, year, month).
Вызов функции должен создать календарь для заданного месяца month в году year и вставить его в elem.
Календарь должен быть таблицей, где неделя – это <tr>, а день – это <td>.
 У таблицы должен быть заголовок с названиями дней недели, каждый день – <th>,
первым днём недели должен быть понедельник.
*/
function createCalendar(elem, year, month) {

}
createCalendar(calendar, 2021, 12);



// Напишите код для сортировки по столбцу "name" теблицы "sortNames".



/*
 Напишите функцию showNotification(options), которая создаёт уведомление: <div class="notification">
с заданным содержимым. Уведомление должно автоматически исчезнуть через 2 секунды.
*/
function showNotification({ top = 0, right = 0, html, className }) {

}
showNotification({ top: 10, right: 10, html: "Hello!", className: "welcome" });




